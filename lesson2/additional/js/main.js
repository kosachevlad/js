// доп задачи

let a = 5;
console.log(a++); // 5 (постфиксный инкремент)
				  // Постфиксная форма отличается от префиксной тем, 
				  // что возвращает старое значение, бывшее до увеличения. 

let b = [] + false - null + true;
console.log(b); // NaN (?)

let c = 1; 
let d = с = 2;
console.log(d); // 2 - (оператор = переопределяет переменную)

let e = [] + 1 + 2;
console.log(e); // 12 - преобразование типов данных в строку (?)

console.log("1"[0]); // 1 - остается просто строка(?)

let f = 2 && 1 && null && 0 && undefined;
console.log(f); // вернет null
				// оператор && вычисляет операнды слева направо до 
				// первого «ложного» и возвращает его, 
				// а если все истинные – то последнее значение.

let g = 1,
	h = 2;
console.log(g && h); // вернет 2 (последнее значение)
console.log(!!(g && h)); // вернет true - булевое значение 
						// (оператор !!(двойное не) - преобразует к логическому типу)

console.log(null || 2 && 3 || 4); // вернет 3
								  // Приоритет оператора && выше, чем ||, 
								  // поэтому он выполнится первым.
								  // Последовательность вычислений:
								  // null || 2 && 3 || 4
								  // null || 3 || 4
								  //  3

let i = [1, 2, 3];
let j = [1, 2, 3];

console.log(i == j); // вернет false
console.log(JSON.stringify(i) == JSON.stringify(j)); // вернет true
												     // для сравнения массивов
												     // можно использовать метод
												     // JSON.stringify()

console.log(+"Infinity"); // вернет Infinity (бесконечность)
						  // оператор "+" перед строкой преобразует ее в число

console.log("ёжик" > "яблоко"); // вернет true
							    // символы сравниваются не по алфавиту, а по коду
							    // согласно кодировке unicode

console.log(0 || "" || 2 || undefined || true || false); // Вернет 2
														 // первое значение, 
														 // которое является true




